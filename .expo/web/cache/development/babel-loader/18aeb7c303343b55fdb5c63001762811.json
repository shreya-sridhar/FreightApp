{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrey\\\\FreightApp\\\\components\\\\HomeMap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport img from \"C:/Users/shrey/FreightApp/assets/images/comfort.jpeg\";\nimport FindPlaces from \"C:/Users/shrey/FreightApp/components/FindPlaces.js\";\nimport RaspberryStrip from \"C:/Users/shrey/FreightApp/components/RaspberryStrip.js\";\nimport Booking from \"C:/Users/shrey/FreightApp/components/Booking.js\";\nimport { Permissions } from \"expo-permissions\";\nimport { Location } from \"expo-location\";\nimport { render } from \"react-dom\";\nimport Geocoder from \"react-native-geocoding\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { faThList } from \"@fortawesome/free-solid-svg-icons\";\nvar GOOGLE_MAPS_APIKEY = \"AIzaSyC0UZckU_eK8heofiWpXTUYU-IpJo0KhnI\";\nvar cars = [{\n  id: \"0\",\n  type: \"UberX\",\n  latitude: 28.450627,\n  longitude: -16.263045,\n  heading: 47\n}, {\n  id: \"1\",\n  type: \"Comfort\",\n  latitude: 28.456312,\n  longitude: -16.252929,\n  heading: 190\n}, {\n  id: \"2\",\n  type: \"UberXL\",\n  latitude: 28.456208,\n  longitude: -16.259098,\n  heading: 99\n}, {\n  id: \"3\",\n  type: \"Comfort\",\n  latitude: 28.450627,\n  longitude: -16.263045,\n  heading: 120\n}];\n\nvar HomeMap = function (_React$Component) {\n  _inherits(HomeMap, _React$Component);\n\n  var _super = _createSuper(HomeMap);\n\n  function HomeMap() {\n    var _this;\n\n    _classCallCheck(this, HomeMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      latitude: null,\n      longitude: null,\n      switchValue: false,\n      searchFocused: false,\n      destination: \"\",\n      origin: \"\",\n      vehicle_type: \"\",\n      users: _this.props.users,\n      pickup_date: null,\n      pickup_time: null\n    };\n\n    _this.toggleSwitch = function (value) {\n      _this.setState({\n        switchValue: value\n      });\n    };\n\n    _this.setLocation = function () {\n      console.log(_this.state.origin);\n      Geocoder.init(GOOGLE_MAPS_APIKEY);\n      Geocoder.from(_this.state.origin).then(function (json) {\n        console.log(_this.state.origin);\n        var location = json.results[0].geometry.location;\n\n        _this.setState({\n          latitude: location.lat,\n          longitude: location.lng\n        });\n      }).catch(function (error) {\n        return console.warn(error);\n      });\n    };\n\n    _this.onFocus = function () {\n      _this.setState({\n        searchFocused: true\n      });\n    };\n\n    _this.onBlur = function () {\n      _this.setState({\n        searchFocused: false\n      });\n    };\n\n    _this.setOrigin = function (data, details) {\n      _this.setState({\n        origin: data.description\n      });\n    };\n\n    _this.setDestination = function (data, details) {\n      _this.setState({\n        destination: data.description\n      });\n    };\n\n    _this.getDate = function (date) {\n      _this.setState({\n        pickup_date: date,\n        pickup_time: date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          latitude: position[\"coords\"][\"latitude\"],\n          longitude: position[\"coords\"][\"longitude\"]\n        });\n      }, function (error) {\n        return Alert.alert(error.message);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n      navigator.geolocation.watchPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n\n        _this2.setState({\n          latitude: latitude,\n          longitude: longitude\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n        distanceFilter: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"this.props.id\", this.props.id);\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, this.state.pickup_date), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, this.state.pickup_time), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, this.props.users[0].name), React.createElement(Icon, {\n        name: \"bell\",\n        style: {\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, this.state.switchValue ? \"You are now a Driver\" : \"You are now a Passenger\"), React.createElement(Switch, {\n        style: {\n          marginTop: 30\n        },\n        onValueChange: this.toggleSwitch,\n        value: this.state.switchValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      })), React.createElement(FindPlaces, {\n        getDate: this.getDate,\n        latitude: this.state.latitude,\n        longitude: this.state.longitude,\n        searchFocused: this.searchFocused,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        setOrigin: this.setOrigin,\n        setDestination: this.setDestination,\n        destination: this.destination,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }), React.createElement(MapView, {\n        style: {\n          width: \"100%\",\n          height: \"44%\"\n        },\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        initialRegion: {\n          latitude: this.state.latitude,\n          longitude: this.state.longitude,\n          latitudeDelta: 0.0222,\n          longitudeDelta: 0.0121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, this.state.latitude ? React.createElement(Marker, {\n        coordinate: {\n          latitude: this.state.latitude,\n          longitude: this.state.longitude\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 34\n        }\n      }) : null, cars.map(function (car) {\n        return React.createElement(Marker, {\n          key: car.id,\n          coordinate: {\n            latitude: car.latitude,\n            longitude: car.longitude\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 70,\n            height: 70,\n            resizeMode: \"contain\",\n            transform: [{\n              rotate: car.heading + \"deg\"\n            }]\n          },\n          source: img,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }\n        }));\n      })), React.createElement(RaspberryStrip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        onPress: function onPress() {\n          return _this3.getDate;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        onPress: function onPress() {\n          return _this3.setLocation;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        title: \"CONFIRM PICKUP TIME\",\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"Booking\", {\n            origin: _this3.state.origin,\n            destination: _this3.state.destination,\n            id: _this3.props.id,\n            users: _this3.props.users,\n            pickup_date: _this3.state.pickup_date,\n            pickup_time: _this3.state.pickup_time\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return HomeMap;\n}(React.Component);\n\nexport { HomeMap as default };","map":{"version":3,"sources":["C:/Users/shrey/FreightApp/components/HomeMap.js"],"names":["React","useState","useEffect","MapView","PROVIDER_GOOGLE","Marker","img","FindPlaces","RaspberryStrip","Booking","Permissions","Location","render","Geocoder","Icon","faThList","GOOGLE_MAPS_APIKEY","cars","id","type","latitude","longitude","heading","HomeMap","state","switchValue","searchFocused","destination","origin","vehicle_type","users","props","pickup_date","pickup_time","toggleSwitch","value","setState","setLocation","console","log","init","from","then","json","location","results","geometry","lat","lng","catch","error","warn","onFocus","onBlur","setOrigin","data","details","description","setDestination","getDate","date","navigator","geolocation","getCurrentPosition","position","Alert","alert","message","enableHighAccuracy","timeout","maximumAge","watchPosition","coords","distanceFilter","name","fontSize","marginTop","width","height","latitudeDelta","longitudeDelta","map","car","resizeMode","transform","rotate","navigation","navigate","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAUA,OAAOC,OAAP,IAAkBC,eAAlB,EAAmCC,MAAnC,QAAiD,mBAAjD;AACA,OAAOC,GAAP,MAAgB,sDAAhB;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,OAAOC,OAAP,MAAoB,iDAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,IAAMC,kBAAkB,GAAG,yCAA3B;AACA,IAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE,SAHZ;AAIEC,EAAAA,SAAS,EAAE,CAAC,SAJd;AAKEC,EAAAA,OAAO,EAAE;AALX,CADW,EAQX;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,QAAQ,EAAE,SAHZ;AAIEC,EAAAA,SAAS,EAAE,CAAC,SAJd;AAKEC,EAAAA,OAAO,EAAE;AALX,CARW,EAeX;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,QAAQ,EAAE,SAHZ;AAIEC,EAAAA,SAAS,EAAE,CAAC,SAJd;AAKEC,EAAAA,OAAO,EAAE;AALX,CAfW,EAsBX;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,QAAQ,EAAE,SAHZ;AAIEC,EAAAA,SAAS,EAAE,CAAC,SAJd;AAKEC,EAAAA,OAAO,EAAE;AALX,CAtBW,CAAb;;IA+BqBC,O;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNJ,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNI,MAAAA,WAAW,EAAE,KAHP;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,MAAM,EAAE,EANF;AAONC,MAAAA,YAAY,EAAE,EAPR;AAQNC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KARZ;AASNE,MAAAA,WAAW,EAAC,IATN;AAUNC,MAAAA,WAAW,EAAC;AAVN,K;;UAaRC,Y,GAAe,UAACC,KAAD,EAAW;AAExB,YAAKC,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEU;AAAf,OAAd;AAGD,K;;UAEDE,W,GAAc,YAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKf,KAAL,CAAWI,MAAvB;AACAf,MAAAA,QAAQ,CAAC2B,IAAT,CAAcxB,kBAAd;AACAH,MAAAA,QAAQ,CAAC4B,IAAT,CAAc,MAAKjB,KAAL,CAAWI,MAAzB,EACGc,IADH,CACQ,UAACC,IAAD,EAAU;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKf,KAAL,CAAWI,MAAvB;AACA,YAAIgB,QAAQ,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBF,QAAxC;;AACA,cAAKR,QAAL,CAAc;AAAEhB,UAAAA,QAAQ,EAAEwB,QAAQ,CAACG,GAArB;AAA0B1B,UAAAA,SAAS,EAAEuB,QAAQ,CAACI;AAA9C,SAAd;AACD,OALH,EAMGC,KANH,CAMS,UAACC,KAAD;AAAA,eAAWZ,OAAO,CAACa,IAAR,CAAaD,KAAb,CAAX;AAAA,OANT;AAOD,K;;UA2BDE,O,GAAU,YAAM;AACd,YAAKhB,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,K;;UAED2B,M,GAAS,YAAM;AACb,YAAKjB,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,K;;UAED4B,S,GAAY,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAC7B,YAAKpB,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE2B,IAAI,CAACE;AAAf,OAAd;AACD,K;;UAEDC,c,GAAiB,UAACH,IAAD,EAAOC,OAAP,EAAmB;AAClC,YAAKpB,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE4B,IAAI,CAACE;AAApB,OAAd;AACD,K;;UAEDE,O,GAAU,UAACC,IAAD,EAAU;AAClB,YAAKxB,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAE4B,IAAd;AACZ3B,QAAAA,WAAW,EAAE2B;AADD,OAAd;AAGD,K;;;;;;;WA7CD,6BAAoB;AAAA;;AAClBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,UAACC,QAAD,EAAc;AACZ,QAAA,MAAI,CAAC5B,QAAL,CAAc;AACZhB,UAAAA,QAAQ,EAAE4C,QAAQ,CAAC,QAAD,CAAR,CAAmB,UAAnB,CADE;AAEZ3C,UAAAA,SAAS,EAAE2C,QAAQ,CAAC,QAAD,CAAR,CAAmB,WAAnB;AAFC,SAAd;AAID,OANH,EAOE,UAACd,KAAD;AAAA,eAAWe,KAAK,CAACC,KAAN,CAAYhB,KAAK,CAACiB,OAAlB,CAAX;AAAA,OAPF,EAQE;AAAEC,QAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,KAArC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OARF;AAWAT,MAAAA,SAAS,CAACC,WAAV,CAAsBS,aAAtB,CACE,UAAAP,QAAQ,EAAI;AAAA,+BACoBA,QAAQ,CAACQ,MAD7B;AAAA,YACJpD,QADI,oBACJA,QADI;AAAA,YACMC,SADN,oBACMA,SADN;;AAEd,QAAA,MAAI,CAACe,QAAL,CAAc;AAAEhB,UAAAA,QAAQ,EAARA,QAAF;AAAWC,UAAAA,SAAS,EAATA;AAAX,SAAd;AACC,OAJD,EAIE;AACA+C,QAAAA,kBAAkB,EAAE,IADpB;AAEDC,QAAAA,OAAO,EAAE,IAFR;AAGDC,QAAAA,UAAU,EAAE,CAHX;AAIDG,QAAAA,cAAc,EAAE;AAJf,OAJF;AAWD;;;WAwBD,kBAAS;AAAA;;AACPnC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKR,KAAL,CAAWb,EAAxC;AACA,aACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKM,KAAL,CAAWQ,WAAlB,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKR,KAAL,CAAWS,WAAlB,CAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKF,KAAL,CAAWD,KAAX,CAAiB,CAAjB,EAAoB4C,IAA3B,CAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKnD,KAAL,CAAWC,WAAX,GACG,sBADH,GAEG,yBAHN,CALF,EAUE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEmD,UAAAA,SAAS,EAAE;AAAb,SADT;AAEE,QAAA,aAAa,EAAE,KAAK1C,YAFtB;AAGE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,EAiBE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAI,KAAKkC,OADlB;AAEE,QAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,QAFvB;AAGE,QAAA,SAAS,EAAE,KAAKI,KAAL,CAAWH,SAHxB;AAIE,QAAA,aAAa,EAAE,KAAKK,aAJtB;AAKE,QAAA,OAAO,EAAE,KAAK0B,OALhB;AAME,QAAA,MAAM,EAAE,KAAKC,MANf;AAOE,QAAA,SAAS,EAAE,KAAKC,SAPlB;AAQE,QAAA,cAAc,EAAE,KAAKI,cARvB;AASE,QAAA,WAAW,EAAE,KAAK/B,WATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EA4BE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAEkD,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SADT;AAEE,QAAA,QAAQ,EAAE1E,eAFZ;AAGE,QAAA,iBAAiB,EAAE,IAHrB;AAIE,QAAA,aAAa,EAAE;AAEbgB,UAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ,QAFR;AAGbC,UAAAA,SAAS,EAAE,KAAKG,KAAL,CAAWH,SAHT;AAIb0D,UAAAA,aAAa,EAAE,MAJF;AAKbC,UAAAA,cAAc,EAAE;AALH,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYK,KAAKxD,KAAL,CAAWJ,QAAX,GAAoB,oBAAC,MAAD;AAEnB,QAAA,UAAU,EAAE;AAAEA,UAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ,QAAvB;AAAiCC,UAAAA,SAAS,EAAE,KAAKG,KAAL,CAAWH;AAAvD,SAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB,GAGE,IAfP,EAiBGJ,IAAI,CAACgE,GAAL,CAAS,UAACC,GAAD;AAAA,eACR,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEA,GAAG,CAAChE,EADX;AAEE,UAAA,UAAU,EAAE;AAAEE,YAAAA,QAAQ,EAAE8D,GAAG,CAAC9D,QAAhB;AAA0BC,YAAAA,SAAS,EAAE6D,GAAG,CAAC7D;AAAzC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AACLwD,YAAAA,KAAK,EAAE,EADF;AAELC,YAAAA,MAAM,EAAE,EAFH;AAGLK,YAAAA,UAAU,EAAE,SAHP;AAILC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,MAAM,EAAKH,GAAG,CAAC5D,OAAT;AADR,aADS;AAJN,WADT;AAWE,UAAA,MAAM,EAAEhB,GAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADQ;AAAA,OAAT,CAjBH,CA5BF,EAoEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApEF,EAqEE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACqD,OAAX;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACtB,WAAX;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,qBADR;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACN,KAAL,CAAWuD,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C;AACxC3D,YAAAA,MAAM,EAAE,MAAI,CAACJ,KAAL,CAAWI,MADqB;AAExCD,YAAAA,WAAW,EAAE,MAAI,CAACH,KAAL,CAAWG,WAFgB;AAGxCT,YAAAA,EAAE,EAAE,MAAI,CAACa,KAAL,CAAWb,EAHyB;AAIxCY,YAAAA,KAAK,EAAE,MAAI,CAACC,KAAL,CAAWD,KAJsB;AAKxCE,YAAAA,WAAW,EAAC,MAAI,CAACR,KAAL,CAAWQ,WALiB;AAMxCC,YAAAA,WAAW,EAAC,MAAI,CAACT,KAAL,CAAWS;AANiB,WAA1C,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,CArEF,CADF;AAyFD;;;;EA3KkCjC,KAAK,CAACwF,S;;SAAtBjE,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  Button,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  Switch,\r\n  View,\r\n} from \"react-native\";\r\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\r\nimport img from \"C:/Users/shrey/FreightApp/assets/images/comfort.jpeg\";\r\nimport FindPlaces from \"C:/Users/shrey/FreightApp/components/FindPlaces.js\";\r\nimport RaspberryStrip from \"C:/Users/shrey/FreightApp/components/RaspberryStrip.js\";\r\nimport Booking from \"C:/Users/shrey/FreightApp/components/Booking.js\";\r\nimport { Permissions } from \"expo-permissions\";\r\nimport { Location } from \"expo-location\";\r\nimport { render } from \"react-dom\";\r\nimport Geocoder from \"react-native-geocoding\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { faThList } from \"@fortawesome/free-solid-svg-icons\";\r\nconst GOOGLE_MAPS_APIKEY = \"AIzaSyC0UZckU_eK8heofiWpXTUYU-IpJo0KhnI\";\r\nconst cars = [\r\n  {\r\n    id: \"0\",\r\n    type: \"UberX\",\r\n    latitude: 28.450627,\r\n    longitude: -16.263045,\r\n    heading: 47,\r\n  },\r\n  {\r\n    id: \"1\",\r\n    type: \"Comfort\",\r\n    latitude: 28.456312,\r\n    longitude: -16.252929,\r\n    heading: 190,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    type: \"UberXL\",\r\n    latitude: 28.456208,\r\n    longitude: -16.259098,\r\n    heading: 99,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    type: \"Comfort\",\r\n    latitude: 28.450627,\r\n    longitude: -16.263045,\r\n    heading: 120,\r\n  },\r\n];\r\n\r\nexport default class HomeMap extends React.Component {\r\n  state = {\r\n    latitude: null,\r\n    longitude: null,\r\n    switchValue: false,\r\n    searchFocused: false,\r\n    destination: \"\",\r\n    origin: \"\",\r\n    vehicle_type: \"\",\r\n    users: this.props.users,\r\n    pickup_date:null,\r\n    pickup_time:null\r\n  };\r\n\r\n  toggleSwitch = (value) => {\r\n    //onValueChange of the switch this function will be called\r\n    this.setState({ switchValue: value });\r\n    //state changes according to switch\r\n    //which will result in re-render the text\r\n  };\r\n\r\n  setLocation = () => {\r\n    console.log(this.state.origin);\r\n    Geocoder.init(GOOGLE_MAPS_APIKEY);\r\n    Geocoder.from(this.state.origin)\r\n      .then((json) => {\r\n        console.log(this.state.origin);\r\n        let location = json.results[0].geometry.location;\r\n        this.setState({ latitude: location.lat, longitude: location.lng });\r\n      })\r\n      .catch((error) => console.warn(error));\r\n  };\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        this.setState({\r\n          latitude: position[\"coords\"][\"latitude\"],\r\n          longitude: position[\"coords\"][\"longitude\"],\r\n        });\r\n      },\r\n      (error) => Alert.alert(error.message),\r\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\r\n    );\r\n\r\n    navigator.geolocation.watchPosition(\r\n      position => {\r\n      const { latitude, longitude } = position.coords;\r\n    this.setState({ latitude,longitude })\r\n    },{\r\n      enableHighAccuracy: true,\r\n     timeout: 5000,\r\n     maximumAge: 0,\r\n     distanceFilter: 1\r\n    })\r\n\r\n  }\r\n\r\n  onFocus = () => {\r\n    this.setState({ searchFocused: true });\r\n  };\r\n\r\n  onBlur = () => {\r\n    this.setState({ searchFocused: false });\r\n  };\r\n\r\n  setOrigin = (data, details) => {\r\n    this.setState({ origin: data.description });\r\n  };\r\n\r\n  setDestination = (data, details) => {\r\n    this.setState({ destination: data.description });\r\n  };\r\n\r\n  getDate = (date) => {\r\n    this.setState({pickup_date: date,\r\n      pickup_time: date\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"this.props.id\", this.props.id);\r\n    return (\r\n      <>\r\n        <View>\r\n          <Text>{this.state.pickup_date}</Text>\r\n          <Text>{this.state.pickup_time}</Text>\r\n          <Text>{this.props.users[0].name}</Text>\r\n          <Icon name=\"bell\" style={{ fontSize: 25 }} />\r\n          <Text>\r\n            {this.state.switchValue\r\n              ? \"You are now a Driver\"\r\n              : \"You are now a Passenger\"}\r\n          </Text>\r\n          <Switch\r\n            style={{ marginTop: 30 }}\r\n            onValueChange={this.toggleSwitch}\r\n            value={this.state.switchValue}\r\n          />\r\n        </View>\r\n        <FindPlaces\r\n          getDate = {this.getDate}\r\n          latitude={this.state.latitude}\r\n          longitude={this.state.longitude}\r\n          searchFocused={this.searchFocused}\r\n          onFocus={this.onFocus}\r\n          onBlur={this.onBlur}\r\n          setOrigin={this.setOrigin}\r\n          setDestination={this.setDestination}\r\n          destination={this.destination}\r\n        />\r\n        <MapView\r\n          style={{ width: \"100%\", height: \"44%\" }}\r\n          provider={PROVIDER_GOOGLE}\r\n          showsUserLocation={true}\r\n          initialRegion={{\r\n            // placeId: this.state.sourceId,\r\n            latitude: this.state.latitude,\r\n            longitude: this.state.longitude,\r\n            latitudeDelta: 0.0222,\r\n            longitudeDelta: 0.0121,\r\n          }}\r\n        >\r\n            {this.state.latitude?<Marker\r\n              // key='current loc'\r\n              coordinate={{ latitude: this.state.latitude, longitude: this.state.longitude }}\r\n            />:null}\r\n\r\n          {cars.map((car) => (\r\n            <Marker\r\n              key={car.id}\r\n              coordinate={{ latitude: car.latitude, longitude: car.longitude }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  width: 70,\r\n                  height: 70,\r\n                  resizeMode: \"contain\",\r\n                  transform: [\r\n                    {\r\n                      rotate: `${car.heading}deg`,\r\n                    },\r\n                  ],\r\n                }}\r\n                source={img}\r\n              />\r\n            </Marker>\r\n\r\n          ))}\r\n        </MapView>\r\n        {/* <Text>{this.props.navigation}</Text> */}\r\n        <RaspberryStrip />\r\n        <View onPress = {() => this.getDate } >\r\n        <View onPress={() => this.setLocation}>\r\n          <Button\r\n            title=\"CONFIRM PICKUP TIME\"\r\n            onPress={() =>\r\n              this.props.navigation.navigate(\"Booking\", {\r\n                origin: this.state.origin,\r\n                destination: this.state.destination,\r\n                id: this.props.id,\r\n                users: this.props.users,\r\n                pickup_date:this.state.pickup_date,\r\n                pickup_time:this.state.pickup_time\r\n              })\r\n            }\r\n          />\r\n        </View>\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}