{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shrey\\\\FreightApp\\\\components\\\\Booking.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport Geocoder from \"react-native-geocoding\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport img from 'C:/Users/shrey/FreightApp/assets/images/comfort.jpeg';\nimport Cars from 'C:/Users/shrey/FreightApp/components/Cars.js';\nvar GOOGLE_MAPS_APIKEY = \"AIzaSyC0UZckU_eK8heofiWpXTUYU-IpJo0KhnI\";\n\nvar Booking = function Booking(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(28.456312),\n      _useState2 = _slicedToArray(_useState, 2),\n      start_lat = _useState2[0],\n      setStartLat = _useState2[1];\n\n  var _useState3 = useState(-16.252929),\n      _useState4 = _slicedToArray(_useState3, 2),\n      start_lng = _useState4[0],\n      setStartLng = _useState4[1];\n\n  var _useState5 = useState(28.450627),\n      _useState6 = _slicedToArray(_useState5, 2),\n      end_lat = _useState6[0],\n      setEndLat = _useState6[1];\n\n  var _useState7 = useState(-16.263045),\n      _useState8 = _slicedToArray(_useState7, 2),\n      end_lng = _useState8[0],\n      setEndLng = _useState8[1];\n\n  var origin = navigation.getParam('origin');\n  var destination = navigation.getParam('destination');\n  var id = navigation.getParam('id');\n  var users = navigation.getParam('users');\n  var pickup_time = navigation.getParam('pickup_time');\n  var pickup_date = navigation.getParam('pickup_date');\n  useEffect(function () {\n    Geocoder.init(GOOGLE_MAPS_APIKEY);\n    Geocoder.from(origin).then(function (json1) {\n      Geocoder.init(GOOGLE_MAPS_APIKEY);\n      Geocoder.from(destination).then(function (json2) {\n        var location = json2.results[0].geometry.location;\n        var end_lat = location.lat;\n        var end_lng = location.lng;\n        setEndLat(end_lat);\n        setEndLng(end_lng);\n        var location = json1.results[0].geometry.location;\n        var start_lat = location.lat;\n        var start_lng = location.lng;\n        setStartLat(start_lat);\n        setStartLng(start_lng);\n      });\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(MapView, {\n    style: {\n      width: '100%',\n      height: '54%'\n    },\n    provider: PROVIDER_GOOGLE,\n    showsUserLocation: true,\n    initialRegion: {\n      latitude: start_lat,\n      longitude: start_lng,\n      latitudeDelta: 0.0222,\n      longitudeDelta: 0.0121\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: start_lat,\n      longitude: start_lng\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), React.createElement(Marker, {\n    coordinate: {\n      latitude: end_lat,\n      longitude: end_lng\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      resizeMode: 'contain'\n    },\n    source: img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, start_lat, \" \", start_lng), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, end_lat, \" \", end_lng), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, pickup_time), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, pickup_date)), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Select Car Type\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, origin), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, destination), React.createElement(Cars, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"CONFIRM BOOKING\",\n    onPress: function onPress() {\n      return navigation.navigate('ConfirmBooking', {\n        origin: origin,\n        destination: destination,\n        id: id,\n        users: users\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Booking;","map":{"version":3,"sources":["C:/Users/shrey/FreightApp/components/Booking.js"],"names":["React","useState","useEffect","MapView","PROVIDER_GOOGLE","Marker","MapViewDirections","Geocoder","img","Cars","GOOGLE_MAPS_APIKEY","Booking","route","navigation","start_lat","setStartLat","start_lng","setStartLng","end_lat","setEndLat","end_lng","setEndLng","origin","getParam","destination","id","users","pickup_time","pickup_date","init","from","then","json1","json2","location","results","geometry","lat","lng","width","height","latitude","longitude","latitudeDelta","longitudeDelta","resizeMode","navigate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\r\nimport MapViewDirections from \"react-native-maps-directions\";\r\nimport Geocoder from \"react-native-geocoding\";\r\nimport {StyleSheet,Image,Text,Button} from \"react-native\";\r\nimport img from 'C:/Users/shrey/FreightApp/assets/images/comfort.jpeg';\r\nimport Cars from 'C:/Users/shrey/FreightApp/components/Cars.js';\r\n\r\nconst GOOGLE_MAPS_APIKEY = \"AIzaSyC0UZckU_eK8heofiWpXTUYU-IpJo0KhnI\";\r\n\r\nconst Booking = ({route,navigation }) => {\r\n  // let start_lat = 0\r\n  // let start_lng = 0\r\n  // let end_lat = 0\r\n  // let end_lng = 0\r\n  const [start_lat, setStartLat] = useState(28.456312)\r\n  const [start_lng, setStartLng] = useState(-16.252929)\r\n  const [end_lat, setEndLat] = useState(28.450627)\r\n  const [end_lng, setEndLng] = useState(-16.263045)\r\n\r\n  // const { origin, destination } = route.params;\r\n  const origin = navigation.getParam('origin')\r\n  const destination = navigation.getParam('destination')\r\n  const id = navigation.getParam('id')\r\n  const users = navigation.getParam('users')\r\n  const pickup_time = navigation.getParam('pickup_time')\r\n  const pickup_date = navigation.getParam('pickup_date')\r\n\r\n  useEffect(() => {\r\n    Geocoder.init(GOOGLE_MAPS_APIKEY);\r\n    Geocoder.from(origin)\r\n      .then((json1) =>{Geocoder.init(GOOGLE_MAPS_APIKEY);\r\n      Geocoder.from(destination)\r\n        .then((json2) => {\r\n          // console.log(end_lat,end_lng);\r\n          // console.log(destination)\r\n          var location = json2.results[0].geometry.location;\r\n          let end_lat = location.lat;\r\n          let end_lng = location.lng;\r\n          setEndLat(end_lat)\r\n          setEndLng(end_lng)\r\n          // console.log(end_lat,end_lng);\r\n\r\n          // console.log(\"hi\",start_lat,start_lng);\r\n          // console.log(\"hello\",origin)\r\n          var location = json1.results[0].geometry.location;\r\n          let start_lat = location.lat;\r\n          let start_lng = location.lng;\r\n          setStartLat(start_lat)\r\n          setStartLng(start_lng)\r\n          // console.log(\"done\",start_lat,start_lng);\r\n        })})\r\n  },[])\r\n\r\n \r\n  return (\r\n  <>\r\n    <MapView\r\n      style={{width: '100%', height: '54%'}}\r\n      provider={PROVIDER_GOOGLE}\r\n      showsUserLocation={true}\r\n      \r\n      initialRegion={{\r\n        latitude: start_lat,\r\n        //{this.state.latitude}\r\n        longitude: start_lng,\r\n        latitudeDelta: 0.0222,\r\n        longitudeDelta: 0.0121 ,\r\n      }}>\r\n    <Marker\r\n          coordinate={{latitude: start_lat, longitude: start_lng}}\r\n        //   title={'Origin'}\r\n        ></Marker>\r\n    <Marker\r\n          coordinate={{latitude: end_lat, longitude: end_lng}}\r\n        //   title={'Origin'}\r\n        ></Marker>\r\n          <Image\r\n            style={{\r\n              width: 20,\r\n              height: 20,\r\n              resizeMode: 'contain'\r\n            }}\r\n            source={img}\r\n          />  \r\n      {/* <Text>{users[0].name}</Text> */}\r\n      <Text>{start_lat} {start_lng}</Text>\r\n      <Text>{end_lat} {end_lng}</Text> \r\n      <Text>{pickup_time}</Text>\r\n      <Text>{pickup_date}</Text>\r\n     {/* <MapViewDirections\r\n        origin={{latitude: start_lat, longitude: start_lng}}\r\n        destination={{latitude: end_lat, longitude: end_lng}}\r\n        apikey={GOOGLE_MAPS_APIKEY}\r\n        strokeWidth={5}\r\n        strokeColor=\"black\"\r\n      /> */}\r\n      </MapView>\r\n      <Text>Select Car Type</Text>\r\n      <Text>{origin}</Text>\r\n      <Text>{destination}</Text>\r\n      <Cars/>\r\n      <Button title=\"CONFIRM BOOKING\" onPress={() => navigation.navigate('ConfirmBooking',{\r\n                origin: origin,\r\n                destination: destination,\r\n                id: id,\r\n                users: users\r\n              })}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}