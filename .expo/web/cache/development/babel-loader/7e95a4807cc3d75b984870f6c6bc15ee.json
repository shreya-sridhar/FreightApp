{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrey\\\\FreightApp\\\\components\\\\HomeMap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport img from 'C:/Users/shrey/FreightApp/assets/images/comfort.jpeg';\nimport FindPlaces from \"C:/Users/shrey/FreightApp/components/FindPlaces.js\";\nimport RaspberryStrip from \"C:/Users/shrey/FreightApp/components/RaspberryStrip.js\";\nimport Booking from \"C:/Users/shrey/FreightApp/components/Booking.js\";\nimport { Permissions } from 'expo-permissions';\nimport { Location } from 'expo-location';\nimport { render } from \"react-dom\";\nimport Geocoder from \"react-native-geocoding\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nvar GOOGLE_MAPS_APIKEY = \"AIzaSyC0UZckU_eK8heofiWpXTUYU-IpJo0KhnI\";\nvar cars = [{\n  id: '0',\n  type: 'UberX',\n  latitude: 28.450627,\n  longitude: -16.263045,\n  heading: 47\n}, {\n  id: '1',\n  type: 'Comfort',\n  latitude: 28.456312,\n  longitude: -16.252929,\n  heading: 190\n}, {\n  id: '2',\n  type: 'UberXL',\n  latitude: 28.456208,\n  longitude: -16.259098,\n  heading: 99\n}, {\n  id: '3',\n  type: 'Comfort',\n  latitude: 28.450627,\n  longitude: -16.263045,\n  heading: 120\n}];\n\nvar HomeMap = function (_React$Component) {\n  _inherits(HomeMap, _React$Component);\n\n  var _super = _createSuper(HomeMap);\n\n  function HomeMap() {\n    var _this;\n\n    _classCallCheck(this, HomeMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      latitude: null,\n      longitude: null,\n      switchValue: false,\n      searchFocused: false,\n      destination: \"\",\n      origin: \"\"\n    };\n\n    _this.toggleSwitch = function (value) {\n      _this.setState({\n        switchValue: value\n      });\n    };\n\n    _this.onFocus = function () {\n      _this.setState({\n        searchFocused: true\n      });\n    };\n\n    _this.onBlur = function () {\n      _this.setState({\n        searchFocused: false\n      });\n    };\n\n    _this.setOrigin = function (data, details) {\n      _this.setState({\n        origin: data.description\n      });\n    };\n\n    _this.setDestination = function (data, details) {\n      _this.setState({\n        destination: data.description\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeMap, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      Geocoder.init(GOOGLE_MAPS_APIKEY);\n      Geocoder.from(this.state.origin).then(function (json) {\n        console.log(_this2.state.origin);\n        var location = json.results[0].geometry.location;\n        start_lat = location.lat;\n        start_lng = location.lng;\n\n        _this2.setState({\n          latitude: start_lat\n        });\n\n        _this2.setState({\n          longitude: start_lng\n        });\n      }).catch(function (error) {\n        return console.warn(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this3.setState({\n          latitude: position[\"coords\"][\"latitude\"],\n          longitude: position[\"coords\"][\"longitude\"]\n        });\n      }, function (error) {\n        return Alert.alert(error.message);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.props.id);\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        name: \"bell\",\n        style: {\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }, this.state.switchValue ? 'You are now a Driver' : 'You are now a Passenger'), React.createElement(Switch, {\n        style: {\n          marginTop: 30\n        },\n        onValueChange: this.toggleSwitch,\n        value: this.state.switchValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }\n      })), React.createElement(FindPlaces, {\n        latitude: this.state.latitude,\n        longitude: this.state.longitude,\n        searchFocused: this.searchFocused,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        setOrigin: this.setOrigin,\n        setDestination: this.setDestination,\n        destination: this.destination,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 5\n        }\n      }, JSON.stringify(this.state.location)), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }\n      }, this.state.origin), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 5\n        }\n      }, this.state.destination), React.createElement(MapView, {\n        style: {\n          width: '100%',\n          height: '44%'\n        },\n        provider: PROVIDER_GOOGLE,\n        showsUserLocation: true,\n        initialRegion: {\n          latitude: this.state.latitude,\n          longitude: this.state.longitude,\n          latitudeDelta: 0.0222,\n          longitudeDelta: 0.0121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }\n      }, cars.map(function (car) {\n        return React.createElement(Marker, {\n          key: car.id,\n          coordinate: {\n            latitude: car.latitude,\n            longitude: car.longitude\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 70,\n            height: 70,\n            resizeMode: 'contain',\n            transform: [{\n              rotate: car.heading + \"deg\"\n            }]\n          },\n          source: img,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }\n        }));\n      })), React.createElement(RaspberryStrip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 5\n        }\n      }), React.createElement(Button, {\n        title: \"CONFIRM PICKUP TIME\",\n        onPress: function onPress() {\n          return _this4.props.navigation.navigate('Booking', {\n            origin: _this4.state.origin,\n            destination: _this4.state.destination,\n            id: _this4.props.id\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return HomeMap;\n}(React.Component);\n\nexport { HomeMap as default };\n;","map":{"version":3,"sources":["C:/Users/shrey/FreightApp/components/HomeMap.js"],"names":["React","useState","useEffect","MapView","PROVIDER_GOOGLE","Marker","img","FindPlaces","RaspberryStrip","Booking","Permissions","Location","render","Geocoder","Icon","GOOGLE_MAPS_APIKEY","cars","id","type","latitude","longitude","heading","HomeMap","state","switchValue","searchFocused","destination","origin","toggleSwitch","value","setState","onFocus","onBlur","setOrigin","data","details","description","setDestination","init","from","then","json","console","log","location","results","geometry","start_lat","lat","start_lng","lng","catch","error","warn","navigator","geolocation","getCurrentPosition","position","Alert","alert","message","enableHighAccuracy","timeout","maximumAge","props","fontSize","marginTop","JSON","stringify","width","height","latitudeDelta","longitudeDelta","map","car","resizeMode","transform","rotate","navigation","navigate","Component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Image,Text, Button,Dimensions,TouchableOpacity, Switch,View} from \"react-native\";\r\nimport MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';\r\nimport img from 'C:/Users/shrey/FreightApp/assets/images/comfort.jpeg';\r\nimport FindPlaces from \"C:/Users/shrey/FreightApp/components/FindPlaces.js\";\r\nimport RaspberryStrip from \"C:/Users/shrey/FreightApp/components/RaspberryStrip.js\";\r\nimport Booking from \"C:/Users/shrey/FreightApp/components/Booking.js\";\r\nimport {Permissions} from 'expo-permissions'\r\nimport {Location} from 'expo-location'\r\nimport { render } from \"react-dom\";\r\nimport Geocoder from \"react-native-geocoding\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nconst GOOGLE_MAPS_APIKEY = \"AIzaSyC0UZckU_eK8heofiWpXTUYU-IpJo0KhnI\";\r\nconst cars = [\r\n    {\r\n      id: '0',\r\n      type: 'UberX',\r\n      latitude: 28.450627,\r\n      longitude: -16.263045,\r\n      heading: 47,\r\n    },\r\n    {\r\n      id: '1',\r\n      type: 'Comfort',\r\n      latitude: 28.456312,\r\n      longitude: -16.252929,\r\n      heading: 190,\r\n    },\r\n    {\r\n      id: '2',\r\n      type: 'UberXL',\r\n      latitude: 28.456208,\r\n      longitude: -16.259098,\r\n      heading: 99,\r\n    },\r\n    {\r\n      id: '3',\r\n      type: 'Comfort',\r\n      latitude: 28.450627,\r\n      longitude:-16.263045,\r\n      heading: 120,\r\n    },\r\n  ];\r\n\r\nexport default class HomeMap extends React.Component {\r\n \r\n    state = {\r\n\t\tlatitude: null,\r\n        longitude:null,\r\n        switchValue: false,\r\n          searchFocused: false,\r\n          destination: \"\",\r\n          origin: \"\",\r\n\t};\r\n\r\n  toggleSwitch = value => {\r\n    //onValueChange of the switch this function will be called\r\n    this.setState({ switchValue: value });\r\n    //state changes according to switch\r\n    //which will result in re-render the text\r\n  };\r\n\r\ncomponentDidUpdate(){\r\n  Geocoder.init(GOOGLE_MAPS_APIKEY);\r\n  Geocoder.from(this.state.origin)\r\n    .then((json) => {\r\n      console.log(this.state.origin)\r\n      var location = json.results[0].geometry.location;\r\n      start_lat = location.lat;\r\n      start_lng = location.lng;\r\n      this.setState({ latitude:start_lat })\r\n      this.setState({ longitude:start_lng })\r\n    })\r\n    .catch((error) => console.warn(error));\r\n}\r\n\r\n\r\n    componentDidMount(){\r\n        navigator.geolocation.getCurrentPosition(\r\n\t\t\tposition => {\r\n\t\t\t\tthis.setState({ latitude:position[\"coords\"][\"latitude\"],longitude:position[\"coords\"][\"longitude\"] });\r\n\t\t\t},\r\n\t\t\terror => Alert.alert(error.message),\r\n\t\t\t{ enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\r\n\t\t);\r\n    }\r\n\r\n    onFocus = () => {\r\n      this.setState({ searchFocused: true });\r\n    }\r\n\r\n    onBlur = () => {\r\n      this.setState({ searchFocused: false });\r\n    }\r\n\r\n    setOrigin = (data,details) => {\r\n      this.setState({origin: data.description})\r\n    }\r\n   \r\n    setDestination = (data,details) => {\r\n      this.setState({destination:data.description})\r\n    }\r\n\r\n  render(){\r\n  console.log(this.props.id)\r\n  return (\r\n      <>\r\n      <View>\r\n      <Icon name='bell' style={{ fontSize: 25 }} />\r\n    <Text>{this.state.switchValue ? 'You are now a Driver' : 'You are now a Passenger'}</Text>\r\n    <Switch\r\n          style={{ marginTop: 30 }}\r\n          onValueChange={this.toggleSwitch}\r\n          value={this.state.switchValue}\r\n        />\r\n        </View>\r\n    <FindPlaces latitude = {this.state.latitude} longitude = {this.state.longitude} searchFocused = {this.searchFocused} onFocus = {this.onFocus} onBlur = {this.onBlur} setOrigin = {this.setOrigin} setDestination = {this.setDestination} destination = {this.destination}/>\r\n    <Text>{JSON.stringify(this.state.location)}</Text>\r\n    <Text>{this.state.origin}</Text>\r\n    <Text>{this.state.destination}</Text>\r\n    <MapView\r\n      style={{width: '100%', height: '44%'}}\r\n      provider={PROVIDER_GOOGLE}\r\n      showsUserLocation={true}\r\n      initialRegion={{\r\n        // placeId: this.state.sourceId,\r\n        latitude: this.state.latitude,\r\n        longitude: this.state.longitude,\r\n        latitudeDelta: 0.0222,\r\n        longitudeDelta: 0.0121,\r\n      }}>\r\n      {cars.map((car) => (\r\n        <Marker\r\n          key={car.id}\r\n          coordinate={{latitude: car.latitude, longitude: car.longitude}}\r\n        >\r\n          <Image\r\n            style={{\r\n              width: 70,\r\n              height: 70,\r\n              resizeMode: 'contain',\r\n              transform: [{\r\n                rotate: `${car.heading}deg`\r\n              }]\r\n            }}\r\n            source={img}\r\n          />\r\n        </Marker>\r\n      ))}\r\n    </MapView>\r\n    {/* <Text>{this.props.navigation}</Text> */}\r\n    <RaspberryStrip />\r\n    <Button title=\"CONFIRM PICKUP TIME\"  onPress={() => this.props.navigation.navigate('Booking', { origin:this.state.origin, destination: this.state.destination, id:this.props.id })} />\r\n    </>\r\n  );}\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}