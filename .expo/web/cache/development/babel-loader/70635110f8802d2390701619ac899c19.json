{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrey\\\\FreightApp\\\\components\\\\EarningsTable.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Table, TableWrapper, Row } from 'react-native-table-component';\n\nvar ExampleThree = function (_Component) {\n  _inherits(ExampleThree, _Component);\n\n  var _super = _createSuper(ExampleThree);\n\n  function ExampleThree(props) {\n    var _this;\n\n    _classCallCheck(this, ExampleThree);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      tableHead: ['Head', 'Head2', 'Head3', 'Head4', 'Head5', 'Head6', 'Head7', 'Head8', 'Head9'],\n      widthArr: [40, 60, 80, 100, 120, 140, 160, 180, 200]\n    };\n    return _this;\n  }\n\n  _createClass(ExampleThree, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var state = this.state;\n      var tableData = [];\n\n      for (var i = 0; i < 30; i += 1) {\n        var rowData = [];\n\n        for (var j = 0; j < 5; j += 1) {\n          rowData.push(\"\" + i + j);\n        }\n\n        tableData.push(rowData);\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, React.createElement(Table, {\n        borderStyle: {\n          borderWidth: 1,\n          borderColor: '#C1C0B9'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, React.createElement(Row, {\n        data: state.tableHead,\n        widthArr: state.widthArr,\n        style: styles.header,\n        textStyle: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      })), React.createElement(ScrollView, {\n        style: styles.dataWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Table, {\n        borderStyle: {\n          borderWidth: 1,\n          borderColor: '#C1C0B9'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, tableData.map(function (rowData, index) {\n        return React.createElement(Row, {\n          key: index,\n          data: rowData,\n          widthArr: state.widthArr,\n          style: [styles.row, index % 2 && {\n            backgroundColor: '#F7F6E7'\n          }],\n          textStyle: styles.text,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }\n        });\n      }))))));\n    }\n  }]);\n\n  return ExampleThree;\n}(Component);\n\nexport { ExampleThree as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  header: {\n    height: 50,\n    backgroundColor: '#537791'\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: '100'\n  },\n  dataWrapper: {\n    marginTop: -1\n  },\n  row: {\n    height: 40,\n    backgroundColor: '#E7E6E1'\n  }\n});","map":{"version":3,"sources":["C:/Users/shrey/FreightApp/components/EarningsTable.js"],"names":["React","Component","Table","TableWrapper","Row","ExampleThree","props","state","tableHead","widthArr","tableData","i","rowData","j","push","styles","container","borderWidth","borderColor","header","text","dataWrapper","map","index","row","backgroundColor","StyleSheet","create","flex","padding","paddingTop","height","textAlign","fontWeight","marginTop"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, View, ScrollView } from 'react-native';\r\nimport { Table, TableWrapper, Row } from 'react-native-table-component';\r\n\r\n \r\nexport default class ExampleThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableHead: ['Head', 'Head2', 'Head3', 'Head4', 'Head5', 'Head6', 'Head7', 'Head8', 'Head9'],\r\n      widthArr: [40, 60, 80, 100, 120, 140, 160, 180, 200]\r\n    }\r\n  }\r\n \r\n  render() {\r\n    const state = this.state;\r\n    const tableData = [];\r\n    for (let i = 0; i < 30; i += 1) {\r\n      const rowData = [];\r\n      for (let j = 0; j < 5; j += 1) {\r\n        rowData.push(`${i}${j}`);\r\n      }\r\n      tableData.push(rowData);\r\n    }\r\n \r\n    return (\r\n      <View style={styles.container}>\r\n        <ScrollView vertical={true}>\r\n          <View>\r\n            <Table borderStyle={{borderWidth: 1, borderColor: '#C1C0B9'}}>\r\n              <Row data={state.tableHead} widthArr={state.widthArr} style={styles.header} textStyle={styles.text}/>\r\n            </Table>\r\n            <ScrollView style={styles.dataWrapper}>\r\n              <Table borderStyle={{borderWidth: 1, borderColor: '#C1C0B9'}}>\r\n                {\r\n                  tableData.map((rowData, index) => (\r\n                    <Row\r\n                      key={index}\r\n                      data={rowData}\r\n                      widthArr={state.widthArr}\r\n                      style={[styles.row, index%2 && {backgroundColor: '#F7F6E7'}]}\r\n                      textStyle={styles.text}\r\n                    />\r\n                  ))\r\n                }\r\n              </Table>\r\n            </ScrollView>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\r\n  header: { height: 50, backgroundColor: '#537791' },\r\n  text: { textAlign: 'center', fontWeight: '100' },\r\n  dataWrapper: { marginTop: -1 },\r\n  row: { height: 40, backgroundColor: '#E7E6E1' }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}