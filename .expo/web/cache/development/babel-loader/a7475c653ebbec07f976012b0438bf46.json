{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrey\\\\FreightApp\\\\components\\\\Splash.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LottieView from 'lottie-react-native';\n\nvar Splash = function (_Component) {\n  _inherits(Splash, _Component);\n\n  var _super = _createSuper(Splash);\n\n  function Splash(props) {\n    _classCallCheck(this, Splash);\n\n    return _super.call(this);\n  }\n\n  _createClass(Splash, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#ffffff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }\n      }, React.createElement(LottieView, {\n        source: require(\"C:/Users/shrey/FreightApp/assets/splash.json\"),\n        height: \"100%\",\n        autoPlay: true,\n        loop: false,\n        speed: 1,\n        onAnimationFinish: function onAnimationFinish() {\n          console.log('Animation Finished!');\n\n          _this.props.navigation.replace('Login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Splash;\n}(Component);\n\nexport { Splash as default };","map":{"version":3,"sources":["C:/Users/shrey/FreightApp/components/Splash.js"],"names":["React","Component","LottieView","Splash","props","flex","backgroundColor","require","console","log","navigation","replace"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;;IAEqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AAElB;;;;WAED,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,CADH;AAEHC,UAAAA,eAAe,EAAE;AAFd,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,UAAD;AACI,QAAA,MAAM,EAAEC,OAAO,CAAC,8CAAD,CADnB;AAEI,QAAA,MAAM,EAAC,MAFX;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,IAAI,EAAE,KAJV;AAKI,QAAA,KAAK,EAAE,CALX;AAMI,QAAA,iBAAiB,EAAE,6BAAM;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,UAAA,KAAI,CAACL,KAAL,CAAWM,UAAX,CAAsBC,OAAtB,CAA8B,OAA9B;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAoBH;;;;EA1B+BV,S;;SAAfE,M","sourcesContent":["import React, { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport LottieView from 'lottie-react-native';\r\n\r\nexport default class Splash extends Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#ffffff'\r\n                }}\r\n            >\r\n                <LottieView\r\n                    source={require(\"C:/Users/shrey/FreightApp/assets/splash.json\")}\r\n                    height='100%'\r\n                    autoPlay\r\n                    loop={false}    \r\n                    speed={1}\r\n                    onAnimationFinish={() => {\r\n                        console.log('Animation Finished!')\r\n                        this.props.navigation.replace('Login');\r\n                    }}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}