{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shrey\\\\FreightApp\\\\node_modules\\\\expo-video-player\\\\dist\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { __rest } from \"tslib\";\nimport { Audio, Video } from 'expo-av';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FullscreenEnterIcon, FullscreenExitIcon, PauseIcon, PlayIcon, ReplayIcon, Spinner } from \"./assets/icons\";\nimport { useNetInfo } from '@react-native-community/netinfo';\nimport { withDefaultProps } from 'with-default-props';\nimport React, { useEffect, useState } from 'react';\nimport Slider from '@react-native-community/slider';\nvar SLIDER_COLOR = '#009485';\nvar BUFFERING_SHOW_DELAY = 200;\nvar ControlStates;\n\n(function (ControlStates) {\n  ControlStates[\"Shown\"] = \"Show\";\n  ControlStates[\"Showing\"] = \"Showing\";\n  ControlStates[\"Hidden\"] = \"Hidden\";\n  ControlStates[\"Hiding\"] = \"Hiding\";\n})(ControlStates || (ControlStates = {}));\n\nvar PlaybackStates;\n\n(function (PlaybackStates) {\n  PlaybackStates[\"Loading\"] = \"Loading\";\n  PlaybackStates[\"Playing\"] = \"Playing\";\n  PlaybackStates[\"Paused\"] = \"Paused\";\n  PlaybackStates[\"Buffering\"] = \"Buffering\";\n  PlaybackStates[\"Error\"] = \"Error\";\n  PlaybackStates[\"Ended\"] = \"Ended\";\n})(PlaybackStates || (PlaybackStates = {}));\n\nvar SeekStates;\n\n(function (SeekStates) {\n  SeekStates[\"NotSeeking\"] = \"NotSeeking\";\n  SeekStates[\"Seeking\"] = \"Seeking\";\n  SeekStates[\"Seeked\"] = \"Seeked\";\n})(SeekStates || (SeekStates = {}));\n\nvar ErrorSeverity;\n\n(function (ErrorSeverity) {\n  ErrorSeverity[\"Fatal\"] = \"Fatal\";\n  ErrorSeverity[\"NonFatal\"] = \"NonFatal\";\n})(ErrorSeverity || (ErrorSeverity = {}));\n\nvar defaultProps = {\n  videoRef: null,\n  children: null,\n  debug: false,\n  inFullscreen: false,\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n  fadeInDuration: 200,\n  fadeOutDuration: 1000,\n  quickFadeOutDuration: 200,\n  hideControlsTimerDuration: 4000,\n  playIcon: PlayIcon,\n  replayIcon: ReplayIcon,\n  pauseIcon: PauseIcon,\n  spinner: Spinner,\n  fullscreenEnterIcon: FullscreenEnterIcon,\n  fullscreenExitIcon: FullscreenExitIcon,\n  showFullscreenButton: true,\n  thumbImage: null,\n  iosTrackImage: null,\n  textStyle: {\n    color: '#FFF',\n    fontSize: 12\n  },\n  videoBackground: '#000',\n  errorCallback: function errorCallback(error) {\n    return console.error('Error: ', error.message, error.type, error.obj);\n  },\n  playbackCallback: function playbackCallback(callback) {},\n  switchToLandscape: function switchToLandscape() {\n    return console.warn(\"Pass your logic to 'switchToLandscape' prop\");\n  },\n  switchToPortrait: function switchToPortrait() {\n    return console.warn(\"Pass your logic to 'switchToPortrait' prop\");\n  },\n  showControlsOnLoad: false,\n  sliderColor: SLIDER_COLOR,\n  disableSlider: false\n};\n\nvar VideoPlayer = function VideoPlayer(props) {\n  var playbackInstance = null;\n  var showingAnimation = null;\n  var hideAnimation = null;\n  var shouldPlayAtEndOfSeek = false;\n  var controlsTimer = null;\n\n  var _useNetInfo = useNetInfo(),\n      isConnected = _useNetInfo.isConnected;\n\n  var _useState = useState(PlaybackStates.Loading),\n      _useState2 = _slicedToArray(_useState, 2),\n      playbackState = _useState2[0],\n      setPlaybackState = _useState2[1];\n\n  var _useState3 = useState(Date.now()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastPlaybackStateUpdate = _useState4[0],\n      setLastPlaybackStateUpdate = _useState4[1];\n\n  var _useState5 = useState(SeekStates.NotSeeking),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seekState = _useState6[0],\n      setSeekState = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playbackInstancePosition = _useState8[0],\n      setPlaybackInstancePosition = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      playbackInstanceDuration = _useState10[0],\n      setPlaybackInstanceDuration = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      shouldPlay = _useState12[0],\n      setShouldPlay = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      error = _useState14[0],\n      setError = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sliderWidth = _useState16[0],\n      setSliderWidth = _useState16[1];\n\n  var _useState17 = useState(props.showControlsOnLoad ? ControlStates.Shown : ControlStates.Hidden),\n      _useState18 = _slicedToArray(_useState17, 2),\n      controlsState = _useState18[0],\n      setControlsState = _useState18[1];\n\n  var _useState19 = useState(new Animated.Value(props.showControlsOnLoad ? 1 : 0)),\n      _useState20 = _slicedToArray(_useState19, 1),\n      controlsOpacity = _useState20[0];\n\n  var setAudio = function setAudio() {\n    var errorCallback;\n    return _regeneratorRuntime.async(function setAudio$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            errorCallback = props.errorCallback;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n              allowsRecordingIOS: false,\n              interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n              playsInSilentModeIOS: true,\n              shouldDuckAndroid: true,\n              interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n              playThroughEarpieceAndroid: false,\n              staysActiveInBackground: false\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            errorCallback({\n              type: ErrorSeverity.NonFatal,\n              message: 'setAudioModeAsync error',\n              obj: _context.t0\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  useEffect(function () {\n    var videoProps = props.videoProps;\n\n    if (videoProps.source === null) {\n      console.error('`Source` is a required property');\n      throw new Error('`Source` is required');\n    }\n\n    setAudio();\n  });\n\n  var updatePlaybackState = function updatePlaybackState(newPlaybackState) {\n    if (playbackState !== newPlaybackState) {\n      var debug = props.debug;\n      debug && console.info('[playback]', playbackState, ' -> ', newPlaybackState, ' [seek] ', seekState, ' [shouldPlay] ', shouldPlay);\n      setPlaybackState(newPlaybackState);\n      setLastPlaybackStateUpdate(Date.now());\n    }\n  };\n\n  var updateSeekState = function updateSeekState(newSeekState) {\n    var debug = props.debug;\n    debug && console.info('[seek]', seekState, ' -> ', newSeekState, ' [playback] ', playbackState, ' [shouldPlay] ', shouldPlay);\n    setSeekState(newSeekState);\n\n    if (newSeekState === SeekStates.Seeking) {\n      controlsTimer && clearTimeout(controlsTimer);\n    } else {\n      resetControlsTimer();\n    }\n  };\n\n  var updatePlaybackCallback = function updatePlaybackCallback(status) {\n    var errorCallback = props.errorCallback,\n        playbackCallback = props.playbackCallback;\n\n    try {\n      playbackCallback(status);\n    } catch (e) {\n      console.error('Uncaught error when calling props.playbackCallback', e);\n    }\n\n    if (!status.isLoaded) {\n      if (status.error) {\n        updatePlaybackState(PlaybackStates.Error);\n        var errorMsg = \"Encountered a fatal error during playback: \" + status.error;\n        setError(errorMsg);\n        errorCallback({\n          type: ErrorSeverity.Fatal,\n          message: errorMsg,\n          obj: {}\n        });\n      }\n    } else {\n      setPlaybackInstancePosition(status.positionMillis || 0);\n      setPlaybackInstanceDuration(status.durationMillis || 0);\n      setShouldPlay(status.shouldPlay);\n\n      if (seekState === SeekStates.NotSeeking && playbackState !== PlaybackStates.Ended) {\n        if (status.didJustFinish && !status.isLooping) {\n          updatePlaybackState(PlaybackStates.Ended);\n        } else {\n          if (!isConnected && status.isBuffering) {\n            updatePlaybackState(PlaybackStates.Error);\n            setError('You are probably offline.' + 'Please make sure you are connected to the Internet to watch this video');\n          } else {\n            updatePlaybackState(isPlayingOrBufferingOrPaused(status));\n          }\n        }\n      }\n    }\n  };\n\n  var getSeekSliderPosition = function getSeekSliderPosition() {\n    return playbackInstancePosition / playbackInstanceDuration || 0;\n  };\n\n  var onSeekSliderValueChange = function onSeekSliderValueChange() {\n    return _regeneratorRuntime.async(function onSeekSliderValueChange$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(playbackInstance !== null && seekState !== SeekStates.Seeking)) {\n              _context2.next = 5;\n              break;\n            }\n\n            updateSeekState(SeekStates.Seeking);\n            shouldPlayAtEndOfSeek = seekState === SeekStates.Seeked ? shouldPlayAtEndOfSeek : shouldPlay;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(playbackInstance.setStatusAsync({\n              shouldPlay: false\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSeekSliderSlidingComplete = function onSeekSliderSlidingComplete(value) {\n    var debug, playback;\n    return _regeneratorRuntime.async(function onSeekSliderSlidingComplete$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(playbackInstance !== null)) {\n              _context3.next = 15;\n              break;\n            }\n\n            debug = props.debug;\n            updateSeekState(SeekStates.Seeked);\n            updatePlaybackState(shouldPlayAtEndOfSeek ? PlaybackStates.Buffering : PlaybackStates.Paused);\n            _context3.prev = 4;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(playbackInstance.setStatusAsync({\n              positionMillis: value * playbackInstanceDuration,\n              shouldPlay: shouldPlayAtEndOfSeek\n            }));\n\n          case 7:\n            playback = _context3.sent;\n            updateSeekState(SeekStates.NotSeeking);\n            updatePlaybackState(isPlayingOrBufferingOrPaused(playback));\n            _context3.next = 15;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](4);\n            debug && console.error('Seek error: ', _context3.t0);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[4, 12]], Promise);\n  };\n\n  var isPlayingOrBufferingOrPaused = function isPlayingOrBufferingOrPaused(status) {\n    if (!status.isLoaded) {\n      return PlaybackStates.Error;\n    }\n\n    if (status.isPlaying) {\n      return PlaybackStates.Playing;\n    }\n\n    if (status.isBuffering) {\n      return PlaybackStates.Buffering;\n    }\n\n    return PlaybackStates.Paused;\n  };\n\n  var onSeekBarTap = function onSeekBarTap(e) {\n    if (!(playbackState === PlaybackStates.Loading || playbackState === PlaybackStates.Ended || playbackState === PlaybackStates.Error || controlsState !== ControlStates.Shown)) {\n      var value = e.nativeEvent.locationX / sliderWidth;\n      onSeekSliderValueChange();\n      onSeekSliderSlidingComplete(value);\n    }\n  };\n\n  var onSliderLayout = function onSliderLayout(e) {\n    setSliderWidth(e.nativeEvent.layout.width);\n  };\n\n  var getMMSSFromMillis = function getMMSSFromMillis(millis) {\n    var totalSeconds = millis / 1000;\n    var seconds = String(Math.floor(totalSeconds % 60));\n    var minutes = String(Math.floor(totalSeconds / 60));\n    return minutes.padStart(2, '0') + ':' + seconds.padStart(2, '0');\n  };\n\n  var replay = function replay() {\n    return _regeneratorRuntime.async(function replay$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(playbackInstance !== null)) {\n              _context4.next = 4;\n              break;\n            }\n\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(playbackInstance.setStatusAsync({\n              shouldPlay: true,\n              positionMillis: 0\n            }));\n\n          case 3:\n            setPlaybackState(PlaybackStates.Playing);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var togglePlay = function togglePlay() {\n    var shouldPlay;\n    return _regeneratorRuntime.async(function togglePlay$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(controlsState === ControlStates.Hidden)) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 2:\n            shouldPlay = playbackState !== PlaybackStates.Playing;\n\n            if (!(playbackInstance !== null)) {\n              _context5.next = 6;\n              break;\n            }\n\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(playbackInstance.setStatusAsync({\n              shouldPlay: shouldPlay\n            }));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var toggleControls = function toggleControls() {\n    switch (controlsState) {\n      case ControlStates.Shown:\n        setControlsState(ControlStates.Hiding);\n        hideControls(true);\n        break;\n\n      case ControlStates.Hidden:\n        showControls();\n        setControlsState(ControlStates.Showing);\n        break;\n\n      case ControlStates.Hiding:\n        setControlsState(ControlStates.Showing);\n        showControls();\n        break;\n\n      case ControlStates.Showing:\n        break;\n    }\n  };\n\n  var showControls = function showControls() {\n    var fadeInDuration = props.fadeInDuration;\n    showingAnimation = Animated.timing(controlsOpacity, {\n      toValue: 1,\n      duration: fadeInDuration,\n      useNativeDriver: true\n    });\n    showingAnimation.start(function (_ref) {\n      var finished = _ref.finished;\n\n      if (finished) {\n        setControlsState(ControlStates.Shown);\n        resetControlsTimer();\n      }\n    });\n  };\n\n  var hideControls = function hideControls() {\n    var immediately = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var quickFadeOutDuration = props.quickFadeOutDuration,\n        fadeOutDuration = props.fadeOutDuration;\n\n    if (controlsTimer) {\n      clearTimeout(controlsTimer);\n    }\n\n    hideAnimation = Animated.timing(controlsOpacity, {\n      toValue: 0,\n      duration: immediately ? quickFadeOutDuration : fadeOutDuration,\n      useNativeDriver: true\n    });\n    hideAnimation.start(function (_ref2) {\n      var finished = _ref2.finished;\n\n      if (finished) {\n        setControlsState(ControlStates.Hidden);\n      }\n    });\n  };\n\n  var onTimerDone = function onTimerDone() {\n    setControlsState(ControlStates.Hiding);\n    hideControls();\n  };\n\n  var resetControlsTimer = function resetControlsTimer() {\n    var hideControlsTimerDuration = props.hideControlsTimerDuration;\n\n    if (controlsTimer) {\n      clearTimeout(controlsTimer);\n    }\n\n    controlsTimer = setTimeout(function () {\n      return onTimerDone();\n    }, hideControlsTimerDuration);\n  };\n\n  var VideoPlayIcon = props.playIcon,\n      VideoPauseIcon = props.pauseIcon,\n      VideoSpinner = props.spinner,\n      VideoFullscreenEnterIcon = props.fullscreenEnterIcon,\n      VideoFullscreenExitIcon = props.fullscreenExitIcon,\n      VideoReplayIcon = props.replayIcon,\n      switchToLandscape = props.switchToLandscape,\n      switchToPortrait = props.switchToPortrait,\n      inFullscreen = props.inFullscreen,\n      sliderColor = props.sliderColor,\n      disableSlider = props.disableSlider,\n      thumbImage = props.thumbImage,\n      iosTrackImage = props.iosTrackImage,\n      showFullscreenButton = props.showFullscreenButton,\n      textStyle = props.textStyle,\n      videoProps = props.videoProps,\n      videoBackground = props.videoBackground,\n      width = props.width,\n      height = props.height;\n  var centeredContentWidth = 60;\n  var screenRatio = width / height;\n  var videoHeight = height;\n  var videoWidth = videoHeight * screenRatio;\n\n  if (videoWidth > width) {\n    videoWidth = width;\n    videoHeight = videoWidth / screenRatio;\n  }\n\n  var videoRef = videoProps.videoRef,\n      _ref4 = videoProps.ref,\n      style = videoProps.style,\n      onPlaybackStatusUpdate = videoProps.onPlaybackStatusUpdate,\n      source = videoProps.source,\n      otherVideoProps = __rest(videoProps, [\"videoRef\", \"ref\", \"style\", \"onPlaybackStatusUpdate\", \"source\"]);\n\n  var Control = function Control(_a) {\n    var callback = _a.callback,\n        center = _a.center,\n        children = _a.children,\n        _a$transparent = _a.transparent,\n        transparent = _a$transparent === void 0 ? false : _a$transparent,\n        otherProps = __rest(_a, [\"callback\", \"center\", \"children\", \"transparent\"]);\n\n    return React.createElement(TouchableOpacity, _extends({}, otherProps, {\n      hitSlop: {\n        top: 20,\n        left: 20,\n        bottom: 20,\n        right: 20\n      },\n      onPress: function onPress() {\n        resetControlsTimer();\n        callback();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: center && {\n        backgroundColor: transparent ? 'transparent' : 'rgba(0, 0, 0, 0.4)',\n        justifyContent: 'center',\n        width: centeredContentWidth,\n        height: centeredContentWidth,\n        borderRadius: centeredContentWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }\n    }, children));\n  };\n\n  var CenteredView = function CenteredView(_a) {\n    var children = _a.children,\n        viewStyle = _a.style,\n        otherProps = __rest(_a, [\"children\", \"style\"]);\n\n    return React.createElement(Animated.View, _extends({}, otherProps, {\n      style: [{\n        position: 'absolute',\n        left: (videoWidth - centeredContentWidth) / 2,\n        top: (videoHeight - centeredContentWidth) / 2,\n        width: centeredContentWidth,\n        height: centeredContentWidth,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }, viewStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }), children);\n  };\n\n  var ErrorText = function ErrorText(_ref3) {\n    var text = _ref3.text;\n    return React.createElement(View, {\n      style: {\n        position: 'absolute',\n        top: videoHeight / 2,\n        width: videoWidth - 40,\n        marginRight: 20,\n        marginLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 38\n      }\n    }, React.createElement(Text, {\n      style: [textStyle, {\n        textAlign: 'center'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 7\n      }\n    }, text));\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: toggleControls,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: videoBackground\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }\n  }, React.createElement(Video, _extends({\n    source: source,\n    ref: function ref(component) {\n      playbackInstance = component;\n      _ref4 && _ref4(component);\n      videoRef && videoRef(component);\n    },\n    onPlaybackStatusUpdate: updatePlaybackCallback,\n    style: {\n      width: videoWidth,\n      height: videoHeight\n    }\n  }, otherVideoProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }\n  })), (playbackState === PlaybackStates.Buffering && Date.now() - lastPlaybackStateUpdate > BUFFERING_SHOW_DELAY || playbackState === PlaybackStates.Loading) && React.createElement(View, {\n    style: {\n      position: 'absolute',\n      left: (videoWidth - centeredContentWidth) / 2,\n      top: (videoHeight - centeredContentWidth) / 2,\n      width: centeredContentWidth,\n      height: centeredContentWidth,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 55\n    }\n  }, React.createElement(VideoSpinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  })), seekState !== SeekStates.Seeking && (playbackState === PlaybackStates.Playing || playbackState === PlaybackStates.Paused) && React.createElement(CenteredView, {\n    pointerEvents: controlsState === ControlStates.Hidden ? 'none' : 'auto',\n    style: {\n      opacity: controlsOpacity\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 99\n    }\n  }, React.createElement(Control, {\n    center: true,\n    callback: togglePlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, playbackState === PlaybackStates.Playing && React.createElement(VideoPauseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 62\n    }\n  }), playbackState === PlaybackStates.Paused && React.createElement(VideoPlayIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 61\n    }\n  }))), playbackState === PlaybackStates.Ended && React.createElement(CenteredView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 53\n    }\n  }, React.createElement(Control, {\n    center: true,\n    callback: replay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }, React.createElement(VideoReplayIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 15\n    }\n  }))), playbackState === PlaybackStates.Error && React.createElement(ErrorText, {\n    text: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 52\n    }\n  }), React.createElement(Animated.View, {\n    pointerEvents: controlsState === ControlStates.Hidden ? 'none' : 'auto',\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      width: videoWidth,\n      opacity: controlsOpacity,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      paddingBottom: 4,\n      paddingHorizontal: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [textStyle, {\n      backgroundColor: 'transparent',\n      marginLeft: 5\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 11\n    }\n  }, getMMSSFromMillis(playbackInstancePosition)), !disableSlider && React.createElement(TouchableWithoutFeedback, {\n    onLayout: onSliderLayout,\n    onPress: onSeekBarTap,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 31\n    }\n  }, React.createElement(Slider, {\n    style: {\n      marginRight: 10,\n      marginLeft: 10,\n      flex: 1\n    },\n    thumbTintColor: sliderColor,\n    minimumTrackTintColor: sliderColor,\n    trackImage: iosTrackImage,\n    thumbImage: thumbImage,\n    value: getSeekSliderPosition(),\n    onValueChange: onSeekSliderValueChange,\n    onSlidingComplete: onSeekSliderSlidingComplete,\n    disabled: playbackState === PlaybackStates.Loading || playbackState === PlaybackStates.Ended || playbackState === PlaybackStates.Error || controlsState !== ControlStates.Shown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 15\n    }\n  })), React.createElement(Text, {\n    style: [textStyle, {\n      backgroundColor: 'transparent',\n      marginRight: 5\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, getMMSSFromMillis(playbackInstanceDuration)), showFullscreenButton && React.createElement(Control, {\n    transparent: true,\n    center: false,\n    callback: function callback() {\n      inFullscreen ? switchToPortrait() : switchToLandscape();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 37\n    }\n  }, inFullscreen ? React.createElement(VideoFullscreenExitIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 31\n    }\n  }) : React.createElement(VideoFullscreenEnterIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 61\n    }\n  })))));\n};\n\nexport default withDefaultProps(VideoPlayer, defaultProps);","map":{"version":3,"sources":["C:/Users/shrey/FreightApp/node_modules/expo-video-player/dist/index.js"],"names":["__rest","Audio","Video","FullscreenEnterIcon","FullscreenExitIcon","PauseIcon","PlayIcon","ReplayIcon","Spinner","useNetInfo","withDefaultProps","React","useEffect","useState","Slider","SLIDER_COLOR","BUFFERING_SHOW_DELAY","ControlStates","PlaybackStates","SeekStates","ErrorSeverity","defaultProps","videoRef","children","debug","inFullscreen","width","Dimensions","get","height","fadeInDuration","fadeOutDuration","quickFadeOutDuration","hideControlsTimerDuration","playIcon","replayIcon","pauseIcon","spinner","fullscreenEnterIcon","fullscreenExitIcon","showFullscreenButton","thumbImage","iosTrackImage","textStyle","color","fontSize","videoBackground","errorCallback","error","console","message","type","obj","playbackCallback","callback","switchToLandscape","warn","switchToPortrait","showControlsOnLoad","sliderColor","disableSlider","VideoPlayer","props","playbackInstance","showingAnimation","hideAnimation","shouldPlayAtEndOfSeek","controlsTimer","isConnected","Loading","playbackState","setPlaybackState","Date","now","lastPlaybackStateUpdate","setLastPlaybackStateUpdate","NotSeeking","seekState","setSeekState","playbackInstancePosition","setPlaybackInstancePosition","playbackInstanceDuration","setPlaybackInstanceDuration","shouldPlay","setShouldPlay","setError","sliderWidth","setSliderWidth","Shown","Hidden","controlsState","setControlsState","Animated","Value","controlsOpacity","setAudio","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playThroughEarpieceAndroid","staysActiveInBackground","NonFatal","videoProps","source","Error","updatePlaybackState","newPlaybackState","info","updateSeekState","newSeekState","Seeking","clearTimeout","resetControlsTimer","updatePlaybackCallback","status","e","isLoaded","errorMsg","Fatal","positionMillis","durationMillis","Ended","didJustFinish","isLooping","isBuffering","isPlayingOrBufferingOrPaused","getSeekSliderPosition","onSeekSliderValueChange","Seeked","setStatusAsync","onSeekSliderSlidingComplete","value","Buffering","Paused","playback","isPlaying","Playing","onSeekBarTap","nativeEvent","locationX","onSliderLayout","layout","getMMSSFromMillis","millis","totalSeconds","seconds","String","Math","floor","minutes","padStart","replay","togglePlay","toggleControls","Hiding","hideControls","showControls","Showing","timing","toValue","duration","useNativeDriver","start","finished","immediately","onTimerDone","setTimeout","VideoPlayIcon","VideoPauseIcon","VideoSpinner","VideoFullscreenEnterIcon","VideoFullscreenExitIcon","VideoReplayIcon","centeredContentWidth","screenRatio","videoHeight","videoWidth","ref","style","onPlaybackStatusUpdate","otherVideoProps","Control","_a","center","transparent","otherProps","top","left","bottom","right","backgroundColor","justifyContent","borderRadius","CenteredView","viewStyle","position","flexDirection","alignItems","ErrorText","text","marginRight","marginLeft","textAlign","component","opacity","paddingBottom","paddingHorizontal","flex"],"mappings":"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","sourcesContent":["import { __rest } from \"tslib\";\r\nimport { Audio, Video } from 'expo-av';\r\nimport { Animated, Dimensions, Text, TouchableOpacity, TouchableWithoutFeedback, View, } from 'react-native';\r\nimport { FullscreenEnterIcon, FullscreenExitIcon, PauseIcon, PlayIcon, ReplayIcon, Spinner, } from './assets/icons';\r\nimport { useNetInfo } from '@react-native-community/netinfo';\r\nimport { withDefaultProps } from 'with-default-props';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Slider from '@react-native-community/slider';\r\nconst SLIDER_COLOR = '#009485';\r\nconst BUFFERING_SHOW_DELAY = 200;\r\n// UI states\r\nvar ControlStates;\r\n(function (ControlStates) {\r\n    ControlStates[\"Shown\"] = \"Show\";\r\n    ControlStates[\"Showing\"] = \"Showing\";\r\n    ControlStates[\"Hidden\"] = \"Hidden\";\r\n    ControlStates[\"Hiding\"] = \"Hiding\";\r\n})(ControlStates || (ControlStates = {}));\r\nvar PlaybackStates;\r\n(function (PlaybackStates) {\r\n    PlaybackStates[\"Loading\"] = \"Loading\";\r\n    PlaybackStates[\"Playing\"] = \"Playing\";\r\n    PlaybackStates[\"Paused\"] = \"Paused\";\r\n    PlaybackStates[\"Buffering\"] = \"Buffering\";\r\n    PlaybackStates[\"Error\"] = \"Error\";\r\n    PlaybackStates[\"Ended\"] = \"Ended\";\r\n})(PlaybackStates || (PlaybackStates = {}));\r\nvar SeekStates;\r\n(function (SeekStates) {\r\n    SeekStates[\"NotSeeking\"] = \"NotSeeking\";\r\n    SeekStates[\"Seeking\"] = \"Seeking\";\r\n    SeekStates[\"Seeked\"] = \"Seeked\";\r\n})(SeekStates || (SeekStates = {}));\r\nvar ErrorSeverity;\r\n(function (ErrorSeverity) {\r\n    ErrorSeverity[\"Fatal\"] = \"Fatal\";\r\n    ErrorSeverity[\"NonFatal\"] = \"NonFatal\";\r\n})(ErrorSeverity || (ErrorSeverity = {}));\r\nconst defaultProps = {\r\n    videoRef: null,\r\n    children: null,\r\n    debug: false,\r\n    inFullscreen: false,\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n    // Animations\r\n    fadeInDuration: 200,\r\n    fadeOutDuration: 1000,\r\n    quickFadeOutDuration: 200,\r\n    hideControlsTimerDuration: 4000,\r\n    // Icons\r\n    playIcon: PlayIcon,\r\n    replayIcon: ReplayIcon,\r\n    pauseIcon: PauseIcon,\r\n    spinner: Spinner,\r\n    fullscreenEnterIcon: FullscreenEnterIcon,\r\n    fullscreenExitIcon: FullscreenExitIcon,\r\n    // Appearance\r\n    showFullscreenButton: true,\r\n    thumbImage: null,\r\n    iosTrackImage: null,\r\n    textStyle: {\r\n        color: '#FFF',\r\n        fontSize: 12,\r\n    },\r\n    videoBackground: '#000',\r\n    // Callbacks\r\n    errorCallback: (error) => console.error('Error: ', error.message, error.type, error.obj),\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    playbackCallback: (callback) => { },\r\n    switchToLandscape: () => console.warn(`Pass your logic to 'switchToLandscape' prop`),\r\n    switchToPortrait: () => console.warn(`Pass your logic to 'switchToPortrait' prop`),\r\n    showControlsOnLoad: false,\r\n    sliderColor: SLIDER_COLOR,\r\n    disableSlider: false,\r\n};\r\nconst VideoPlayer = (props) => {\r\n    let playbackInstance = null;\r\n    let showingAnimation = null;\r\n    let hideAnimation = null;\r\n    let shouldPlayAtEndOfSeek = false;\r\n    let controlsTimer = null;\r\n    const { isConnected } = useNetInfo();\r\n    const [playbackState, setPlaybackState] = useState(PlaybackStates.Loading);\r\n    const [lastPlaybackStateUpdate, setLastPlaybackStateUpdate] = useState(Date.now());\r\n    const [seekState, setSeekState] = useState(SeekStates.NotSeeking);\r\n    const [playbackInstancePosition, setPlaybackInstancePosition] = useState(0);\r\n    const [playbackInstanceDuration, setPlaybackInstanceDuration] = useState(0);\r\n    const [shouldPlay, setShouldPlay] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [sliderWidth, setSliderWidth] = useState(0);\r\n    const [controlsState, setControlsState] = useState(props.showControlsOnLoad ? ControlStates.Shown : ControlStates.Hidden);\r\n    const [controlsOpacity] = useState(new Animated.Value(props.showControlsOnLoad ? 1 : 0));\r\n    // Set audio mode to play even in silent mode (like the YouTube app)\r\n    const setAudio = async () => {\r\n        const { errorCallback } = props;\r\n        try {\r\n            await Audio.setAudioModeAsync({\r\n                allowsRecordingIOS: false,\r\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\r\n                playsInSilentModeIOS: true,\r\n                shouldDuckAndroid: true,\r\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\r\n                playThroughEarpieceAndroid: false,\r\n                staysActiveInBackground: false,\r\n            });\r\n        }\r\n        catch (e) {\r\n            errorCallback({\r\n                type: ErrorSeverity.NonFatal,\r\n                message: 'setAudioModeAsync error',\r\n                obj: e,\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const { videoProps } = props;\r\n        if (videoProps.source === null) {\r\n            console.error('`Source` is a required property');\r\n            throw new Error('`Source` is required');\r\n        }\r\n        setAudio();\r\n    });\r\n    // Handle events during playback\r\n    const updatePlaybackState = (newPlaybackState) => {\r\n        if (playbackState !== newPlaybackState) {\r\n            const { debug } = props;\r\n            debug &&\r\n                console.info('[playback]', playbackState, ' -> ', newPlaybackState, ' [seek] ', seekState, ' [shouldPlay] ', shouldPlay);\r\n            setPlaybackState(newPlaybackState);\r\n            setLastPlaybackStateUpdate(Date.now());\r\n        }\r\n    };\r\n    const updateSeekState = (newSeekState) => {\r\n        const { debug } = props;\r\n        debug &&\r\n            console.info('[seek]', seekState, ' -> ', newSeekState, ' [playback] ', playbackState, ' [shouldPlay] ', shouldPlay);\r\n        setSeekState(newSeekState);\r\n        // Don't keep the controls timer running when the state is seeking\r\n        if (newSeekState === SeekStates.Seeking) {\r\n            controlsTimer && clearTimeout(controlsTimer);\r\n        }\r\n        else {\r\n            // Start the controlFs timer anew\r\n            resetControlsTimer();\r\n        }\r\n    };\r\n    const updatePlaybackCallback = (status) => {\r\n        const { errorCallback, playbackCallback } = props;\r\n        try {\r\n            playbackCallback(status);\r\n        }\r\n        catch (e) {\r\n            console.error('Uncaught error when calling props.playbackCallback', e);\r\n        }\r\n        if (!status.isLoaded) {\r\n            if (status.error) {\r\n                updatePlaybackState(PlaybackStates.Error);\r\n                const errorMsg = `Encountered a fatal error during playback: ${status.error}`;\r\n                setError(errorMsg);\r\n                errorCallback({ type: ErrorSeverity.Fatal, message: errorMsg, obj: {} });\r\n            }\r\n        }\r\n        else {\r\n            // Update current position, duration, and `shouldPlay`\r\n            setPlaybackInstancePosition(status.positionMillis || 0);\r\n            setPlaybackInstanceDuration(status.durationMillis || 0);\r\n            setShouldPlay(status.shouldPlay);\r\n            // Figure out what state should be next (only if we are not seeking,\r\n            // other the seek action handlers control the playback state, not this callback)\r\n            if (seekState === SeekStates.NotSeeking && playbackState !== PlaybackStates.Ended) {\r\n                if (status.didJustFinish && !status.isLooping) {\r\n                    updatePlaybackState(PlaybackStates.Ended);\r\n                }\r\n                else {\r\n                    // If the video is buffering but there is no Internet, you go to the Error state\r\n                    if (!isConnected && status.isBuffering) {\r\n                        updatePlaybackState(PlaybackStates.Error);\r\n                        setError('You are probably offline.' +\r\n                            'Please make sure you are connected to the Internet to watch this video');\r\n                    }\r\n                    else {\r\n                        updatePlaybackState(isPlayingOrBufferingOrPaused(status));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // Seeking\r\n    const getSeekSliderPosition = () => playbackInstancePosition / playbackInstanceDuration || 0;\r\n    const onSeekSliderValueChange = async () => {\r\n        if (playbackInstance !== null && seekState !== SeekStates.Seeking) {\r\n            updateSeekState(SeekStates.Seeking);\r\n            // A seek might have finished (Seeked) but since we are not in NotSeeking yet, the `shouldPlay` flag is still false,\r\n            // but we really want it be the stored value from before the previous seek\r\n            shouldPlayAtEndOfSeek = seekState === SeekStates.Seeked ? shouldPlayAtEndOfSeek : shouldPlay;\r\n            // Pause the video\r\n            await playbackInstance.setStatusAsync({ shouldPlay: false });\r\n        }\r\n    };\r\n    const onSeekSliderSlidingComplete = async (value) => {\r\n        if (playbackInstance !== null) {\r\n            const { debug } = props;\r\n            // Seeking is done, so go to Seeked, and set playbackState to Buffering\r\n            updateSeekState(SeekStates.Seeked);\r\n            // If the video is going to play after seek, the user expects a spinner.\r\n            // Otherwise, the user expects the play button\r\n            updatePlaybackState(shouldPlayAtEndOfSeek ? PlaybackStates.Buffering : PlaybackStates.Paused);\r\n            try {\r\n                const playback = await playbackInstance.setStatusAsync({\r\n                    positionMillis: value * playbackInstanceDuration,\r\n                    shouldPlay: shouldPlayAtEndOfSeek,\r\n                });\r\n                // The underlying <Video> has successfully updated playback position\r\n                // TODO: If `shouldPlayAtEndOfSeek` is false, should we still set the playbackState to Paused?\r\n                // But because we setStatusAsync(shouldPlay: false), so the AVPlaybackStatus return value will be Paused.\r\n                updateSeekState(SeekStates.NotSeeking);\r\n                updatePlaybackState(isPlayingOrBufferingOrPaused(playback));\r\n            }\r\n            catch (e) {\r\n                debug && console.error('Seek error: ', e);\r\n            }\r\n        }\r\n    };\r\n    const isPlayingOrBufferingOrPaused = (status) => {\r\n        if (!status.isLoaded) {\r\n            return PlaybackStates.Error;\r\n        }\r\n        if (status.isPlaying) {\r\n            return PlaybackStates.Playing;\r\n        }\r\n        if (status.isBuffering) {\r\n            return PlaybackStates.Buffering;\r\n        }\r\n        return PlaybackStates.Paused;\r\n    };\r\n    const onSeekBarTap = (e) => {\r\n        if (!(playbackState === PlaybackStates.Loading ||\r\n            playbackState === PlaybackStates.Ended ||\r\n            playbackState === PlaybackStates.Error ||\r\n            controlsState !== ControlStates.Shown)) {\r\n            const value = e.nativeEvent.locationX / sliderWidth;\r\n            onSeekSliderValueChange();\r\n            onSeekSliderSlidingComplete(value);\r\n        }\r\n    };\r\n    // Capture the width of the seekbar slider for use in `_onSeekbarTap`\r\n    const onSliderLayout = (e) => {\r\n        setSliderWidth(e.nativeEvent.layout.width);\r\n    };\r\n    // Controls view\r\n    const getMMSSFromMillis = (millis) => {\r\n        const totalSeconds = millis / 1000;\r\n        const seconds = String(Math.floor(totalSeconds % 60));\r\n        const minutes = String(Math.floor(totalSeconds / 60));\r\n        return minutes.padStart(2, '0') + ':' + seconds.padStart(2, '0');\r\n    };\r\n    // Controls Behavior\r\n    const replay = async () => {\r\n        if (playbackInstance !== null) {\r\n            await playbackInstance.setStatusAsync({\r\n                shouldPlay: true,\r\n                positionMillis: 0,\r\n            });\r\n            // Update playbackState to get out of Ended state\r\n            setPlaybackState(PlaybackStates.Playing);\r\n        }\r\n    };\r\n    const togglePlay = async () => {\r\n        if (controlsState === ControlStates.Hidden) {\r\n            return;\r\n        }\r\n        const shouldPlay = playbackState !== PlaybackStates.Playing;\r\n        if (playbackInstance !== null) {\r\n            await playbackInstance.setStatusAsync({ shouldPlay });\r\n        }\r\n    };\r\n    const toggleControls = () => {\r\n        switch (controlsState) {\r\n            case ControlStates.Shown:\r\n                // If the controls are currently Shown, a tap should hide controls quickly\r\n                setControlsState(ControlStates.Hiding);\r\n                hideControls(true);\r\n                break;\r\n            case ControlStates.Hidden:\r\n                // If the controls are currently, show controls with fade-in animation\r\n                showControls();\r\n                setControlsState(ControlStates.Showing);\r\n                break;\r\n            case ControlStates.Hiding:\r\n                // If controls are fading out, a tap should reverse, and show controls\r\n                setControlsState(ControlStates.Showing);\r\n                showControls();\r\n                break;\r\n            case ControlStates.Showing:\r\n                // A tap when the controls are fading in should do nothing\r\n                break;\r\n        }\r\n    };\r\n    const showControls = () => {\r\n        const { fadeInDuration } = props;\r\n        showingAnimation = Animated.timing(controlsOpacity, {\r\n            toValue: 1,\r\n            duration: fadeInDuration,\r\n            useNativeDriver: true,\r\n        });\r\n        showingAnimation.start(({ finished }) => {\r\n            if (finished) {\r\n                setControlsState(ControlStates.Shown);\r\n                resetControlsTimer();\r\n            }\r\n        });\r\n    };\r\n    const hideControls = (immediately = false) => {\r\n        const { quickFadeOutDuration, fadeOutDuration } = props;\r\n        if (controlsTimer) {\r\n            clearTimeout(controlsTimer);\r\n        }\r\n        hideAnimation = Animated.timing(controlsOpacity, {\r\n            toValue: 0,\r\n            duration: immediately ? quickFadeOutDuration : fadeOutDuration,\r\n            useNativeDriver: true,\r\n        });\r\n        hideAnimation.start(({ finished }) => {\r\n            if (finished) {\r\n                setControlsState(ControlStates.Hidden);\r\n            }\r\n        });\r\n    };\r\n    const onTimerDone = () => {\r\n        // After the controls timer runs out, fade away the controls slowly\r\n        setControlsState(ControlStates.Hiding);\r\n        hideControls();\r\n    };\r\n    const resetControlsTimer = () => {\r\n        const { hideControlsTimerDuration } = props;\r\n        if (controlsTimer) {\r\n            clearTimeout(controlsTimer);\r\n        }\r\n        controlsTimer = setTimeout(() => onTimerDone(), hideControlsTimerDuration);\r\n    };\r\n    const { playIcon: VideoPlayIcon, pauseIcon: VideoPauseIcon, spinner: VideoSpinner, fullscreenEnterIcon: VideoFullscreenEnterIcon, fullscreenExitIcon: VideoFullscreenExitIcon, replayIcon: VideoReplayIcon, switchToLandscape, switchToPortrait, inFullscreen, sliderColor, disableSlider, thumbImage, iosTrackImage, showFullscreenButton, textStyle, videoProps, videoBackground, width, height, } = props;\r\n    const centeredContentWidth = 60;\r\n    const screenRatio = width / height;\r\n    let videoHeight = height;\r\n    let videoWidth = videoHeight * screenRatio;\r\n    if (videoWidth > width) {\r\n        videoWidth = width;\r\n        videoHeight = videoWidth / screenRatio;\r\n    }\r\n    // Do not let the user override `ref`, `callback`, and `style`\r\n    // @ts-ignore\r\n    const { videoRef, ref, style, onPlaybackStatusUpdate, source } = videoProps, otherVideoProps = __rest(videoProps, [\"videoRef\", \"ref\", \"style\", \"onPlaybackStatusUpdate\", \"source\"]);\r\n    const Control = (_a) => {\r\n        var { callback, center, children, transparent = false } = _a, otherProps = __rest(_a, [\"callback\", \"center\", \"children\", \"transparent\"]);\r\n        return (<TouchableOpacity {...otherProps} hitSlop={{ top: 20, left: 20, bottom: 20, right: 20 }} onPress={() => {\r\n            resetControlsTimer();\r\n            callback();\r\n        }}>\r\n      <View style={center && {\r\n            backgroundColor: transparent ? 'transparent' : 'rgba(0, 0, 0, 0.4)',\r\n            justifyContent: 'center',\r\n            width: centeredContentWidth,\r\n            height: centeredContentWidth,\r\n            borderRadius: centeredContentWidth,\r\n        }}>\r\n        {children}\r\n      </View>\r\n    </TouchableOpacity>);\r\n    };\r\n    const CenteredView = (_a) => {\r\n        var { children, style: viewStyle } = _a, \r\n        // pointerEvents,\r\n        otherProps = __rest(_a, [\"children\", \"style\"]);\r\n        return (<Animated.View {...otherProps} style={[\r\n            {\r\n                position: 'absolute',\r\n                left: (videoWidth - centeredContentWidth) / 2,\r\n                top: (videoHeight - centeredContentWidth) / 2,\r\n                width: centeredContentWidth,\r\n                height: centeredContentWidth,\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            },\r\n            viewStyle,\r\n        ]}>\r\n      {children}\r\n    </Animated.View>);\r\n    };\r\n    const ErrorText = ({ text }) => (<View style={{\r\n        position: 'absolute',\r\n        top: videoHeight / 2,\r\n        width: videoWidth - 40,\r\n        marginRight: 20,\r\n        marginLeft: 20,\r\n    }}>\r\n      <Text style={[textStyle, { textAlign: 'center' }]}>{text}</Text>\r\n    </View>);\r\n    return (<TouchableWithoutFeedback onPress={toggleControls}>\r\n      <View style={{ backgroundColor: videoBackground }}>\r\n        <Video source={source} ref={component => {\r\n        playbackInstance = component;\r\n        ref && ref(component);\r\n        videoRef && videoRef(component);\r\n    }} onPlaybackStatusUpdate={updatePlaybackCallback} style={{\r\n        width: videoWidth,\r\n        height: videoHeight,\r\n    }} {...otherVideoProps}/>\r\n\r\n        \r\n        \r\n        {((playbackState === PlaybackStates.Buffering &&\r\n        Date.now() - lastPlaybackStateUpdate > BUFFERING_SHOW_DELAY) ||\r\n        playbackState === PlaybackStates.Loading) && (<View style={{\r\n        position: 'absolute',\r\n        left: (videoWidth - centeredContentWidth) / 2,\r\n        top: (videoHeight - centeredContentWidth) / 2,\r\n        width: centeredContentWidth,\r\n        height: centeredContentWidth,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }}>\r\n            <VideoSpinner />\r\n          </View>)}\r\n\r\n        \r\n        {seekState !== SeekStates.Seeking &&\r\n        (playbackState === PlaybackStates.Playing || playbackState === PlaybackStates.Paused) && (<CenteredView pointerEvents={controlsState === ControlStates.Hidden ? 'none' : 'auto'} \r\n    // @ts-ignore\r\n    style={{ opacity: controlsOpacity }}>\r\n              <Control center={true} callback={togglePlay}>\r\n                \r\n                {playbackState === PlaybackStates.Playing && <VideoPauseIcon />}\r\n                {playbackState === PlaybackStates.Paused && <VideoPlayIcon />}\r\n              </Control>\r\n            </CenteredView>)}\r\n\r\n        \r\n        {playbackState === PlaybackStates.Ended && (<CenteredView>\r\n            <Control center={true} callback={replay}>\r\n              <VideoReplayIcon />\r\n            </Control>\r\n          </CenteredView>)}\r\n\r\n        \r\n        {playbackState === PlaybackStates.Error && <ErrorText text={error}/>}\r\n\r\n        \r\n        <Animated.View pointerEvents={controlsState === ControlStates.Hidden ? 'none' : 'auto'} style={{\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: videoWidth,\r\n        opacity: controlsOpacity,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingBottom: 4,\r\n        paddingHorizontal: 4,\r\n    }}>\r\n          \r\n          <Text style={[textStyle, { backgroundColor: 'transparent', marginLeft: 5 }]}>\r\n            {getMMSSFromMillis(playbackInstancePosition)}\r\n          </Text>\r\n\r\n          \r\n          {!disableSlider && (<TouchableWithoutFeedback onLayout={onSliderLayout} onPress={onSeekBarTap}>\r\n              <Slider style={{ marginRight: 10, marginLeft: 10, flex: 1 }} thumbTintColor={sliderColor} minimumTrackTintColor={sliderColor} trackImage={iosTrackImage} thumbImage={thumbImage} value={getSeekSliderPosition()} onValueChange={onSeekSliderValueChange} onSlidingComplete={onSeekSliderSlidingComplete} disabled={playbackState === PlaybackStates.Loading ||\r\n        playbackState === PlaybackStates.Ended ||\r\n        playbackState === PlaybackStates.Error ||\r\n        controlsState !== ControlStates.Shown}/>\r\n            </TouchableWithoutFeedback>)}\r\n          \r\n          <Text style={[textStyle, { backgroundColor: 'transparent', marginRight: 5 }]}>\r\n            {getMMSSFromMillis(playbackInstanceDuration)}\r\n          </Text>\r\n\r\n          \r\n          {showFullscreenButton && (<Control transparent={true} center={false} callback={() => {\r\n        inFullscreen ? switchToPortrait() : switchToLandscape();\r\n    }}>\r\n              {inFullscreen ? <VideoFullscreenExitIcon /> : <VideoFullscreenEnterIcon />}\r\n            </Control>)}\r\n        </Animated.View>\r\n      </View>\r\n    </TouchableWithoutFeedback>);\r\n};\r\nexport default withDefaultProps(VideoPlayer, defaultProps);\r\n"]},"metadata":{},"sourceType":"module"}